digraph "CFG for 'create_seq' function" {
	label="CFG for 'create_seq' function";

	Node0x5f4ba60 [shape=record,label="{%0:\l  %1 = tail call i32 @omp_get_thread_num() #4\l  %2 = tail call i32 @omp_get_num_threads() #4\l  %3 = add nsw i32 %2, 1048575\l  %4 = sdiv i32 %3, %2\l  %5 = mul i32 %4, %1\l  %6 = add nsw i32 %5, %4\l  %7 = icmp sgt i32 %6, 1048576\l  %. = select i1 %7, i32 1048576, i32 %6\l  store i1 false, i1* @KS, align 1\l  %8 = tail call double @find_my_seed(i32 %1, i32 %2, i64 4194304, double\l... %seed, double %a)\l  %9 = icmp slt i32 %5, %.\l  br i1 %9, label %.lr.ph, label %._crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x5f4ba60:s0 -> Node0x5f4bab0;
	Node0x5f4ba60:s1 -> Node0x5f5ad00;
	Node0x5f4bab0 [shape=record,label="{.lr.ph:                                           \l  %10 = sext i32 %5 to i64\l  %11 = add i32 %1, 1\l  %12 = mul i32 %4, %11\l  %13 = icmp slt i32 %12, 1048576\l  %.op = add i32 %12, -1\l  %14 = select i1 %13, i32 %.op, i32 1048575\l  %.b.i.pre = load i1, i1* @KS, align 1\l  br label %15\l}"];
	Node0x5f4bab0 -> Node0x5f4bb00;
	Node0x5f4bb00 [shape=record,label="{%15:\l\l  %.b.i = phi i1 [ %.b.i.pre, %.lr.ph ], [ true, %randlc.exit8 ]\l  %indvars.iv = phi i64 [ %10, %.lr.ph ], [ %indvars.iv.next, %randlc.exit8 ]\l  %16 = phi double [ %8, %.lr.ph ], [ %111, %randlc.exit8 ]\l  br i1 %.b.i, label %._crit_edge.i, label %.preheader10.i\l|{<s0>T|<s1>F}}"];
	Node0x5f4bb00:s0 -> Node0x5f4bb50;
	Node0x5f4bb00:s1 -> Node0x5f4bba0;
	Node0x5f4bb50 [shape=record,label="{._crit_edge.i:                                    \l  %.pre.i = load double, double* @R23, align 8, !tbaa !1\l  %.pre11.i = load double, double* @T23, align 8, !tbaa !1\l  %.pre12.i = load double, double* @R46, align 8, !tbaa !1\l  %.pre13.i = load double, double* @T46, align 8, !tbaa !1\l  br label %randlc.exit8\l}"];
	Node0x5f4bb50 -> Node0x5f4bbf0;
	Node0x5f4bba0 [shape=record,label="{.preheader10.i:                                   \l  store double 0x3E80000000000000, double* @R23, align 8, !tbaa !1\l  store double 8.388608e+06, double* @T23, align 8, !tbaa !1\l  store double 0x3D10000000000000, double* @R46, align 8, !tbaa !1\l  store double 0x42D0000000000000, double* @T46, align 8, !tbaa !1\l  store i1 true, i1* @KS, align 1\l  br label %randlc.exit8\l}"];
	Node0x5f4bba0 -> Node0x5f4bbf0;
	Node0x5f4bbf0 [shape=record,label="{randlc.exit8:                                     \l  %.pre13.i21 = phi double [ %.pre13.i, %._crit_edge.i ], [\l... 0x42D0000000000000, %.preheader10.i ]\l  %17 = phi double [ %.pre12.i, %._crit_edge.i ], [ 0x3D10000000000000,\l... %.preheader10.i ]\l  %.pre11.i19 = phi double [ %.pre11.i, %._crit_edge.i ], [ 8.388608e+06,\l... %.preheader10.i ]\l  %.pre.i18 = phi double [ %.pre.i, %._crit_edge.i ], [ 0x3E80000000000000,\l... %.preheader10.i ]\l  %18 = fmul double %.pre.i18, %a\l  %19 = fptosi double %18 to i32\l  %20 = sitofp i32 %19 to double\l  %21 = fmul double %.pre11.i19, %20\l  %22 = fsub double %a, %21\l  %23 = fmul double %16, %.pre.i18\l  %24 = fptosi double %23 to i32\l  %25 = sitofp i32 %24 to double\l  %26 = fmul double %.pre11.i19, %25\l  %27 = fsub double %16, %26\l  %28 = fmul double %20, %27\l  %29 = fmul double %25, %22\l  %30 = fadd double %29, %28\l  %31 = fmul double %.pre.i18, %30\l  %32 = fptosi double %31 to i32\l  %33 = sitofp i32 %32 to double\l  %34 = fmul double %.pre11.i19, %33\l  %35 = fsub double %30, %34\l  %36 = fmul double %.pre11.i19, %35\l  %37 = fmul double %22, %27\l  %38 = fadd double %37, %36\l  %39 = fmul double %17, %38\l  %40 = fptosi double %39 to i32\l  %41 = sitofp i32 %40 to double\l  %42 = fmul double %.pre13.i21, %41\l  %43 = fsub double %38, %42\l  %44 = fmul double %17, %43\l  %45 = fmul double %43, %.pre.i18\l  %46 = fptosi double %45 to i32\l  %47 = sitofp i32 %46 to double\l  %48 = fmul double %.pre11.i19, %47\l  %49 = fsub double %43, %48\l  %50 = fmul double %20, %49\l  %51 = fmul double %47, %22\l  %52 = fadd double %51, %50\l  %53 = fmul double %.pre.i18, %52\l  %54 = fptosi double %53 to i32\l  %55 = sitofp i32 %54 to double\l  %56 = fmul double %.pre11.i19, %55\l  %57 = fsub double %52, %56\l  %58 = fmul double %.pre11.i19, %57\l  %59 = fmul double %22, %49\l  %60 = fadd double %59, %58\l  %61 = fmul double %17, %60\l  %62 = fptosi double %61 to i32\l  %63 = sitofp i32 %62 to double\l  %64 = fmul double %.pre13.i21, %63\l  %65 = fsub double %60, %64\l  %66 = fmul double %17, %65\l  %67 = fadd double %44, %66\l  %68 = fmul double %65, %.pre.i18\l  %69 = fptosi double %68 to i32\l  %70 = sitofp i32 %69 to double\l  %71 = fmul double %.pre11.i19, %70\l  %72 = fsub double %65, %71\l  %73 = fmul double %20, %72\l  %74 = fmul double %70, %22\l  %75 = fadd double %74, %73\l  %76 = fmul double %.pre.i18, %75\l  %77 = fptosi double %76 to i32\l  %78 = sitofp i32 %77 to double\l  %79 = fmul double %.pre11.i19, %78\l  %80 = fsub double %75, %79\l  %81 = fmul double %.pre11.i19, %80\l  %82 = fmul double %22, %72\l  %83 = fadd double %82, %81\l  %84 = fmul double %17, %83\l  %85 = fptosi double %84 to i32\l  %86 = sitofp i32 %85 to double\l  %87 = fmul double %.pre13.i21, %86\l  %88 = fsub double %83, %87\l  %89 = fmul double %17, %88\l  %90 = fadd double %67, %89\l  %91 = fmul double %88, %.pre.i18\l  %92 = fptosi double %91 to i32\l  %93 = sitofp i32 %92 to double\l  %94 = fmul double %.pre11.i19, %93\l  %95 = fsub double %88, %94\l  %96 = fmul double %20, %95\l  %97 = fmul double %93, %22\l  %98 = fadd double %97, %96\l  %99 = fmul double %.pre.i18, %98\l  %100 = fptosi double %99 to i32\l  %101 = sitofp i32 %100 to double\l  %102 = fmul double %.pre11.i19, %101\l  %103 = fsub double %98, %102\l  %104 = fmul double %.pre11.i19, %103\l  %105 = fmul double %22, %95\l  %106 = fadd double %105, %104\l  %107 = fmul double %17, %106\l  %108 = fptosi double %107 to i32\l  %109 = sitofp i32 %108 to double\l  %110 = fmul double %.pre13.i21, %109\l  %111 = fsub double %106, %110\l  %112 = fmul double %17, %111\l  %113 = fadd double %90, %112\l  %114 = fmul double %113, 1.638400e+04\l  %115 = fptosi double %114 to i32\l  %116 = getelementptr inbounds [1048576 x i32], [1048576 x i32]* @key_array,\l... i64 0, i64 %indvars.iv\l  store i32 %115, i32* %116, align 4, !tbaa !5\l  %indvars.iv.next = add nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv to i32\l  %exitcond = icmp eq i32 %lftr.wideiv, %14\l  br i1 %exitcond, label %._crit_edge.loopexit, label %15\l|{<s0>T|<s1>F}}"];
	Node0x5f4bbf0:s0 -> Node0x5f4bc40;
	Node0x5f4bbf0:s1 -> Node0x5f4bb00;
	Node0x5f4bc40 [shape=record,label="{._crit_edge.loopexit:                             \l  br label %._crit_edge\l}"];
	Node0x5f4bc40 -> Node0x5f5ad00;
	Node0x5f5ad00 [shape=record,label="{._crit_edge:                                      \l  ret void\l}"];
}
